/*
 * This file is generated by jOOQ.
 */
package jooq.fancy.app.udt;


import javax.annotation.Generated;

import jooq.fancy.app.Public;
import jooq.fancy.app.udt.records.AggSamealignmentRecord;

import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AggSamealignment extends UDTImpl<AggSamealignmentRecord> {

    private static final long serialVersionUID = 798364348;

    /**
     * The reference instance of <code>public.agg_samealignment</code>
     */
    public static final AggSamealignment AGG_SAMEALIGNMENT = new AggSamealignment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AggSamealignmentRecord> getRecordType() {
        return AggSamealignmentRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static final UDTField<AggSamealignmentRecord, Object> REFRASTER = createField("refraster", org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"raster\""), AGG_SAMEALIGNMENT, "");

    /**
     * The attribute <code>public.agg_samealignment.aligned</code>.
     */
    public static final UDTField<AggSamealignmentRecord, Boolean> ALIGNED = createField("aligned", org.jooq.impl.SQLDataType.BOOLEAN, AGG_SAMEALIGNMENT, "");

    /**
     * No further instances allowed
     */
    private AggSamealignment() {
        super("agg_samealignment", null, null, false);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC != null ? Public.PUBLIC : new SchemaImpl(DSL.name("public"));
    }
}
