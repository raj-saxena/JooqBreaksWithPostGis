/*
 * This file is generated by jOOQ.
 */
package jooq.fancy.app.udt.records;


import javax.annotation.Generated;

import jooq.fancy.app.udt.Summarystats;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SummarystatsRecord extends UDTRecordImpl<SummarystatsRecord> implements Record6<Long, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = 1602194226;

    /**
     * Setter for <code>public.summarystats.count</code>.
     */
    public SummarystatsRecord setCount(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.summarystats.count</code>.
     */
    public Long getCount() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.summarystats.sum</code>.
     */
    public SummarystatsRecord setSum(Double value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.summarystats.sum</code>.
     */
    public Double getSum() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>public.summarystats.mean</code>.
     */
    public SummarystatsRecord setMean(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.summarystats.mean</code>.
     */
    public Double getMean() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.summarystats.stddev</code>.
     */
    public SummarystatsRecord setStddev(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.summarystats.stddev</code>.
     */
    public Double getStddev() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.summarystats.min</code>.
     */
    public SummarystatsRecord setMin(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.summarystats.min</code>.
     */
    public Double getMin() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.summarystats.max</code>.
     */
    public SummarystatsRecord setMax(Double value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.summarystats.max</code>.
     */
    public Double getMax() {
        return (Double) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Double, Double, Double, Double, Double> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Summarystats.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return Summarystats.SUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Summarystats.MEAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Summarystats.STDDEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Summarystats.MIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return Summarystats.MAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getSum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getMean();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getStddev();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getMin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getMax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getSum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getMean();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getStddev();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getMin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getMax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SummarystatsRecord value1(Long value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SummarystatsRecord value2(Double value) {
        setSum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SummarystatsRecord value3(Double value) {
        setMean(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SummarystatsRecord value4(Double value) {
        setStddev(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SummarystatsRecord value5(Double value) {
        setMin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SummarystatsRecord value6(Double value) {
        setMax(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SummarystatsRecord values(Long value1, Double value2, Double value3, Double value4, Double value5, Double value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SummarystatsRecord
     */
    public SummarystatsRecord() {
        super(Summarystats.SUMMARYSTATS);
    }

    /**
     * Create a detached, initialised SummarystatsRecord
     */
    public SummarystatsRecord(Long count, Double sum, Double mean, Double stddev, Double min, Double max) {
        super(Summarystats.SUMMARYSTATS);

        set(0, count);
        set(1, sum);
        set(2, mean);
        set(3, stddev);
        set(4, min);
        set(5, max);
    }
}
