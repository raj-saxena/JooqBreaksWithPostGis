/*
 * This file is generated by jOOQ.
 */
package jooq.fancy.app.tables;


import javax.annotation.Generated;

import jooq.fancy.app.Public;
import jooq.fancy.app.tables.records.StRetileRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StRetile extends TableImpl<StRetileRecord> {

    private static final long serialVersionUID = 1990274851;

    /**
     * The reference instance of <code>public.st_retile</code>
     */
    public static final StRetile ST_RETILE = new StRetile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StRetileRecord> getRecordType() {
        return StRetileRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<StRetileRecord, Object> ST_RETILE_ = createField("st_retile", org.jooq.impl.DefaultDataType.getDefaultDataType("\"raster\""), this, "");

    /**
     * Create a <code>public.st_retile</code> table reference
     */
    public StRetile() {
        this(DSL.name("st_retile"), null);
    }

    /**
     * Create an aliased <code>public.st_retile</code> table reference
     */
    public StRetile(String alias) {
        this(DSL.name(alias), ST_RETILE);
    }

    /**
     * Create an aliased <code>public.st_retile</code> table reference
     */
    public StRetile(Name alias) {
        this(alias, ST_RETILE);
    }

    private StRetile(Name alias, Table<StRetileRecord> aliased) {
        this(alias, aliased, new Field[8]);
    }

    private StRetile(Name alias, Table<StRetileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StRetile(Table<O> child, ForeignKey<O, StRetileRecord> key) {
        super(child, key, ST_RETILE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StRetile as(String alias) {
        return new StRetile(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StRetile as(Name alias) {
        return new StRetile(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public StRetile rename(String name) {
        return new StRetile(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public StRetile rename(Name name) {
        return new StRetile(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public StRetile call(Object tab, String col, Object ext, Double sfx, Double sfy, Integer tw, Integer th, String algo) {
        return new StRetile(DSL.name(getName()), null, new Field[] { 
              DSL.val(tab, org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"regclass\""))
            , DSL.val(col, org.jooq.impl.SQLDataType.VARCHAR)
            , DSL.val(ext, org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""))
            , DSL.val(sfx, org.jooq.impl.SQLDataType.DOUBLE)
            , DSL.val(sfy, org.jooq.impl.SQLDataType.DOUBLE)
            , DSL.val(tw, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(th, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(algo, org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("'NearestNeighbour'::text", org.jooq.impl.SQLDataType.CLOB)))
        });
    }

    /**
     * Call this table-valued function
     */
    public StRetile call(Field<Object> tab, Field<String> col, Field<Object> ext, Field<Double> sfx, Field<Double> sfy, Field<Integer> tw, Field<Integer> th, Field<String> algo) {
        return new StRetile(DSL.name(getName()), null, new Field[] { 
              tab
            , col
            , ext
            , sfx
            , sfy
            , tw
            , th
            , algo
        });
    }
}
