/*
 * This file is generated by jOOQ.
 */
package jooq.fancy.app.tables;


import javax.annotation.Generated;

import jooq.fancy.app.Public;
import jooq.fancy.app.tables.records.RasterOverviewsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RasterOverviews extends TableImpl<RasterOverviewsRecord> {

    private static final long serialVersionUID = 1241521960;

    /**
     * The reference instance of <code>public.raster_overviews</code>
     */
    public static final RasterOverviews RASTER_OVERVIEWS = new RasterOverviews();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RasterOverviewsRecord> getRecordType() {
        return RasterOverviewsRecord.class;
    }

    /**
     * The column <code>public.raster_overviews.o_table_catalog</code>.
     */
    public final TableField<RasterOverviewsRecord, String> O_TABLE_CATALOG = createField("o_table_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.o_table_schema</code>.
     */
    public final TableField<RasterOverviewsRecord, String> O_TABLE_SCHEMA = createField("o_table_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.o_table_name</code>.
     */
    public final TableField<RasterOverviewsRecord, String> O_TABLE_NAME = createField("o_table_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.o_raster_column</code>.
     */
    public final TableField<RasterOverviewsRecord, String> O_RASTER_COLUMN = createField("o_raster_column", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.r_table_catalog</code>.
     */
    public final TableField<RasterOverviewsRecord, String> R_TABLE_CATALOG = createField("r_table_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.r_table_schema</code>.
     */
    public final TableField<RasterOverviewsRecord, String> R_TABLE_SCHEMA = createField("r_table_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.r_table_name</code>.
     */
    public final TableField<RasterOverviewsRecord, String> R_TABLE_NAME = createField("r_table_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.r_raster_column</code>.
     */
    public final TableField<RasterOverviewsRecord, String> R_RASTER_COLUMN = createField("r_raster_column", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.raster_overviews.overview_factor</code>.
     */
    public final TableField<RasterOverviewsRecord, Integer> OVERVIEW_FACTOR = createField("overview_factor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.raster_overviews</code> table reference
     */
    public RasterOverviews() {
        this(DSL.name("raster_overviews"), null);
    }

    /**
     * Create an aliased <code>public.raster_overviews</code> table reference
     */
    public RasterOverviews(String alias) {
        this(DSL.name(alias), RASTER_OVERVIEWS);
    }

    /**
     * Create an aliased <code>public.raster_overviews</code> table reference
     */
    public RasterOverviews(Name alias) {
        this(alias, RASTER_OVERVIEWS);
    }

    private RasterOverviews(Name alias, Table<RasterOverviewsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RasterOverviews(Name alias, Table<RasterOverviewsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RasterOverviews(Table<O> child, ForeignKey<O, RasterOverviewsRecord> key) {
        super(child, key, RASTER_OVERVIEWS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RasterOverviews as(String alias) {
        return new RasterOverviews(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RasterOverviews as(Name alias) {
        return new RasterOverviews(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RasterOverviews rename(String name) {
        return new RasterOverviews(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RasterOverviews rename(Name name) {
        return new RasterOverviews(name, null);
    }
}
